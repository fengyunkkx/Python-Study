序列的学习记录
>>> list1 = [1,1,2,3,5,8,13,21]
>>> list1.count(1)
2
>>> list1.index(1)
0
>>> start = list1.index(1)+1
>>> stop = len(list1)
>>> list1.index(1,start,stop)
1
>>> list1.reverse()
>>> list1
[21, 13, 8, 5, 3, 2, 1, 1]
>>> list1.sort()
>>> list1
[1, 1, 2, 3, 5, 8, 13, 21]
>>> list1.sort(reverse = True)
>>> list1
[21, 13, 8, 5, 3, 2, 1, 1]
>>> tuple1 = (1,2,3,4,5,6,7,8)
>>> tuple1
(1, 2, 3, 4, 5, 6, 7, 8)
>>> tuple1[1]
2
>>> tuple1[5:]
(6, 7, 8)
>>> tuple1[:3]
(1, 2, 3)
>>> tuple2 = tuple1
>>> tuple2
(1, 2, 3, 4, 5, 6, 7, 8)
>>> temp=(1)
>>> type(temp)
<class 'int'>
>>> temp = 1,2,3
>>> type(temp)
<class 'tuple'>
>>> temp =
SyntaxError: invalid syntax
>>> temp = ()
>>> type(temp)
<class 'tuple'>
>>> 
>>> 
>>> 
>>> 
>>> temp = (1,2,3)
>>> print(temp)
(1, 2, 3)
>>> temp = temp [:2] + (5) + temp[2:]
Traceback (most recent call last):
  File "<pyshell#33>", line 1, in <module>
    temp = temp [:2] + (5) + temp[2:]
TypeError: can only concatenate tuple (not "int") to tuple
>>> temp = temp[:2] + (5,)+ temp[2:]
>>> temp
(1, 2, 5, 3)
>>> str1 = "fin"
>>> str1[:2]
'fi'
>>> 
>>> 
>>> 
>>> list1 = [1,3,5,7,9]
>>> str1 = "FishC"
>>> for each in zip(list1,str1):
	print (each)

	
(1, 'F')
(3, 'i')
(5, 's')
(7, 'h')
(9, 'C')
>>> tuple1 = (2,4,6,8,10)
>>> for each in zip(list1,str1,tuple1):
	print each
	
SyntaxError: Missing parentheses in call to 'print'
>>> for each in zip (list1,tuple1,str1):
	print (each)

	
(1, 2, 'F')
(3, 4, 'i')
(5, 6, 's')
(7, 8, 'h')
(9, 10, 'C')
>>> 